@model ShopDomain.Models.Merchandise

@{
    ViewData["Title"] = "Деталі товару";
}

<div class="container mt-5">
    <h2 class="text-center mb-4">Деталі товару: @Model.Name</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success" role="alert">
            @TempData["SuccessMessage"]
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @TempData["ErrorMessage"]
        </div>
    }

    <div class="row">
        <div class="col-md-6">
            @if (!string.IsNullOrEmpty(Model.ImageUrl))
            {
                <img src="@Model.ImageUrl" class="img-fluid mb-3" alt="@Model.Name" style="max-height: 400px; object-fit: cover; width: 100%;" />
            }
            else
            {
                <img src="~/images/default-merch.jpg" class="img-fluid mb-3" alt="Без фото" style="max-height: 400px; object-fit: cover; width: 100%;" />
            }
        </div>
        <div class="col-md-6">
            <h3>@Model.Name</h3>
            <p><strong>Ціна:</strong> @Model.Price.ToString("C")</p>
            <p><strong>Бренд:</strong> @(Model.Brand?.BrandName ?? "Немає")</p>
            <p><strong>Категорія:</strong> @(Model.Category?.CategoryName ?? "Немає")</p>
            <p><strong>Розмір:</strong> @(Model.Size?.SizeName ?? "Немає")</p>
            <p><strong>Команда:</strong> @(Model.Team?.TeamName ?? "Немає")</p>

            <a asp-action="Index" class="btn btn-secondary mt-3">Назад до списку</a>
            <button class="btn btn-primary mt-3 add-to-cart" data-merchandise-id="@Model.Id">Додати в кошик</button>
            @if (User.IsInRole("Admin"))
            {
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning mt-3">Редагувати</a>
            }
        </div>
    </div>

    <!-- Секція відгуків -->
    <div class="mt-5">
        <h3>Відгуки</h3>
        @if (Model.Reviews != null && Model.Reviews.Any())
        {
            <div class="list-group" id="reviews-list">
                @foreach (var review in Model.Reviews)
                {
                    <div class="list-group-item mb-3">
                        <h5 class="mb-1">@review.Buyer.Username</h5>
                        <p class="mb-1"><strong>Оцінка:</strong> @(review.Rating.HasValue ? review.Rating.Value.ToString() : "Без оцінки")</p>
                        <p class="mb-1">@review.Comment</p>
                        <small class="text-muted">@review.ReviewDate?.ToString("dd.MM.yyyy HH:mm")</small>
                    </div>
                }
            </div>
        }
        else
        {
            <p id="no-reviews">Відгуків поки немає. Будьте першим!</p>
        }

        <!-- Форма додавання відгуку -->
        @if (User.Identity.IsAuthenticated)
        {
            <div class="mt-4">
                <h4>Залишити відгук</h4>
                <form asp-action="AddReviewFromDetails" method="post">
                    <input type="hidden" name="merchandiseId" value="@Model.Id" />
                    <div class="form-group mb-3">
                        <label for="rating" class="form-label">Оцінка (1-5)</label>
                        <input type="number" class="form-control" id="rating" name="rating" min="1" max="5" placeholder="Введіть оцінку від 1 до 5" required />
                    </div>
                    <div class="form-group mb-3">
                        <label for="comment" class="form-label">Коментар</label>
                        <textarea class="form-control" id="comment" name="comment" rows="4" placeholder="Напишіть ваш відгук..." required></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Додати відгук</button>
                </form>
            </div>
        }
        else
        {
            <div class="mt-3">
                <p><a href="/Account/Login">Увійдіть</a>, щоб залишити відгук.</p>
            </div>
        }
    </div>
</div>

<style>
    .container {
        max-width: 1200px;
    }

    .img-fluid {
        border: 1px solid #ddd;
        border-radius: 5px;
    }

    .list-group-item {
        border-radius: 5px;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            document.querySelector('.add-to-cart').addEventListener('click', addToCart);
        });

        function addToCart(event) {
            const button = event.target;
            const merchandiseId = parseInt(button.getAttribute('data-merchandise-id'));
            const userId = '@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value';

            if (!userId) {
                alert('Будь ласка, увійдіть у систему, щоб додати товар до кошика.');
                window.location.href = '/Account/Login';
                return;
            }

            fetch('/api/Cart/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({ merchandiseId, quantity: 1 })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`Помилка додавання до кошика: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                alert(data.message);
                if (typeof updateCartCount === 'function') {
                    updateCartCount();
                }
            })
            .catch(error => {
                console.error('Error adding to cart:', error);
                alert('Не вдалося додати товар до кошика. Спробуйте ще раз.');
            });
        }
    </script>
}